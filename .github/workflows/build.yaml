name: Deploy to Pages

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Get FireBase json from environment
        run: "echo $FIREBASE_SERVICE_ACCOUNT_BLOB > firebase-adminsdk.json"
        working-directory: ./generate
        env:
          FIREBASE_SERVICE_ACCOUNT_BLOB: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_BLOB }}
      - name: Install bun dependencies
        run: "bun install"
        working-directory: ./generate
      - name: Build website
        run: "bun run build.tsx"
        working-directory: ./generate
        env:
          AWS_ENDPOINT: ${{ secrets.AWS_ENDPOINT }}
          AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          FIREBASE_COLLECTION: ${{ secrets.FIREBASE_COLLECTION }}
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./generate/out/

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4